name: Destroy Flask Web App

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment to destroy"
        required: true
        type: choice
        options:
          - dev
          - staging
          - production

env:
  AWS_REGION: ap-southeast-1
  S3_FILE_PATH: tf_output.txt 

jobs:
  destroy:
    name: Destroy Infrastructure
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Download Terraform State File from S3
      run: |
        S3_PATH="${{ vars.OUTPUT_PATH }}/${{ github.event.inputs.environment }}/tf_output"
        aws s3 cp s3://${{ vars.S3_BUCKET }}/${S3_PATH} ${{ env.S3_FILE_PATH }} || echo "No existing Terraform state found"

    - name: Set Up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: latest

    - name: Initialize Terraform
      run: terraform init

    - name: Destroy Infrastructure
      run: |
        terraform destroy -auto-approve -var="environment=${{ github.event.inputs.environment }}"

    - name: Cleanup S3 State File
      run: |
        S3_PATH="${{ vars.OUTPUT_PATH }}/${{ github.event.inputs.environment }}/tf_output"
        aws s3 rm s3://${{ vars.S3_BUCKET }}/${S3_PATH} || echo "No state file to remove"
